import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import spearmanr

# 真实值列表
true_values = [17.0, 22.0, 22.0, 22.0, 22.0, 23.0, 23.0, 24.0, 25.0, 25.0, 26.0, 26.0, 26.0, 26.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 28.0, 28.0, 28.0, 28.0, 29.0, 29.0, 29.0, 29.0, 29.0, 30.0, 30.0, 30.0, 30.0, 31.0, 31.0, 31.0, 31.0, 31.0, 31.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 33.0, 34.0, 34.0, 34.0, 34.0, 34.0, 34.0, 34.0, 34.0, 34.0, 35.0, 35.0, 35.0, 36.0, 36.0, 36.0, 38.0, 38.0, 38.0, 38.0, 38.0, 39.0, 39.0, 39.0, 39.0, 41.0, 41.0, 42.0, 42.0, 42.0, 42.0, 42.0, 43.0, 43.0, 44.0, 44.0, 44.0, 44.0, 45.0, 45.0, 45.0, 45.0, 45.0, 45.0, 45.0, 45.0, 46.0, 46.0, 46.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 48.0, 49.0, 49.0, 50.0, 50.0, 50.0, 51.0, 51.0, 51.0, 51.0, 51.0, 51.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 53.0, 53.0, 53.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 56.0, 57.0, 58.0, 58.0, 58.0, 58.0, 58.0, 60.0, 61.0, 61.0, 62.0, 62.0, 62.0, 64.0, 64.0, 65.0, 66.0, 66.0, 67.0, 67.0, 68.0, 70.0, 73.0, 71.0, 74.0, 76.0, 75.0, 77.0, 74.0]

# 预测值列表
predicted_values = [26.336334228515625, 25.200958251953125, 23.068538665771484, 28.230823516845703, 25.87761688232422, 28.916351318359375, 30.136425018310547, 23.599300384521484, 24.416671752929688, 27.412708282470703, 27.179004669189453, 32.10808181762695, 24.850852966308594, 25.96894073486328, 25.859661102294922, 29.01683807373047, 31.00225830078125, 26.276199340820312, 31.613859176635742, 25.96074676513672, 26.861003875732422, 24.605731964111328, 38.708740234375, 24.689109802246094, 28.585994720458984, 27.522106170654297, 24.35578155517578, 26.912273406982422, 33.7711181640625, 26.142005920410156, 29.386489868164062, 28.418182373046875, 25.03519058227539, 27.234737396240234, 37.066444396972656, 29.40666961669922, 28.716014862060547, 29.609485626220703, 25.155094146728516, 30.9571475982666, 32.19667053222656, 29.434589385986328, 30.750537872314453, 23.876049041748047, 34.35215759277344, 33.97469711303711, 31.057523727416992, 27.89769744873047, 32.81083297729492, 28.360881805419922, 30.438552856445312, 30.060977935791016, 30.734968185424805, 33.281829833984375, 29.858684539794922, 29.744800567626953, 32.629371643066406, 35.42533874511719, 35.30238342285156, 32.748695373535156, 32.81901550292969, 31.992216110229492, 30.565174102783203, 31.166902542114258, 28.719234466552734, 31.451793670654297, 28.11595916748047, 43.724327087402344, 34.249908447265625, 24.492168426513672, 28.24791717529297, 38.36085510253906, 32.006614685058594, 38.597808837890625, 34.163108825683594, 30.161548614501953, 34.3336181640625, 39.522342681884766, 33.262420654296875, 39.126434326171875, 43.66014099121094, 34.029693603515625, 36.82337188720703, 36.744728088378906, 34.47583770751953, 46.531219482421875, 45.4273681640625, 43.06248474121094, 43.763519287109375, 37.37262725830078, 40.799583435058594, 48.91926574707031, 39.251197814941406, 35.88892364501953, 30.90045166015625, 44.91605758666992, 50.436466217041016, 38.55720901489258, 47.51035690307617, 50.955291748046875, 38.956687927246094, 34.039039611816406, 49.03513717651367, 50.193119049072266, 44.82472229003906, 48.754032135009766, 48.42285919189453, 37.83740997314453, 48.681640625, 49.22674560546875, 48.890586853027344, 41.58412170410156, 49.21613693237305, 51.61750030517578, 54.76725387573242, 44.144256591796875, 46.8925666809082, 46.035194396972656, 38.51222610473633, 52.218994140625, 33.535614013671875, 52.167510986328125, 54.26935577392578, 53.948429107666016, 50.80420684814453, 58.36822509765625, 57.9849853515625, 46.81330108642578, 58.40060043334961, 51.91255569458008, 48.24468231201172, 51.70346450805664, 56.08062744140625, 51.96585464477539, 47.78931427001953, 56.80009078979492, 55.47316360473633, 59.67150115966797, 61.841064453125, 57.53678512573242, 62.180908203125, 52.96455764770508, 54.753265380859375, 60.41838836669922, 55.81318664550781, 57.004852294921875, 56.410552978515625, 44.94763946533203, 55.43359375, 51.081878662109375, 56.41590118408203, 59.262516021728516, 60.62689971923828, 56.93041229248047, 55.944766998291016, 47.91175079345703, 59.17890930175781, 57.798980712890625, 60.19586181640625, 65.02222442626953, 66.39690399169922, 59.947818756103516, 60.17942428588867, 63.68815612792969, 62.74290466308594, 62.547462463378906, 61.190391540527344, 64.38560485839844, 64.79149627685547, 58.318443298339844, 68.11337280273438, 67.5164794921875, 68.69266510009766, 62.23716354370117, 71.13121032714844, 59.56962203979492, 70.7876205444336, 72.82862091064453, 70.89691925048828]# 计算差异值
diff = [true_values[i] - predicted_values[i] for i in range(len(true_values))]

# 计算绝对值最大和最小的差异值
max_diff = max(abs(val) for val in diff)
min_diff = min(abs(val) for val in diff)

# 计算颜色映射范围
cmap_range = max_diff - min_diff

# 计算每个差异值的颜色
colors = [((abs(val) - min_diff) / cmap_range) for val in diff]

# 绘制散点图
plt.figure(figsize=(10, 6))
plt.scatter(true_values, diff, c=colors, cmap='coolwarm', alpha=0.7)
plt.colorbar(label='Color based on difference magnitude')
plt.xlabel('Lumbar age')
plt.ylabel('Age Delta')
plt.title('Scatter Plot of Age Delta')
plt.grid(True)
plt.show()

# 计算差异的累加求和、平均值和Spearman相关系数
diff_sum = sum(diff)
diff_mean = np.mean(diff)
spearman_corr, _ = spearmanr(true_values, predicted_values)

print("差异的累加求和:", diff_sum)
print("差异的平均值:", diff_mean)
print("Spearman相关系数:", spearman_corr)
